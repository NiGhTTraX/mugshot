(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{117:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return c}));var r=n(3),i=(n(0),n(128));const o={id:"mugshot.pixeldifferoptions",title:"Interface: PixelDifferOptions",sidebar_label:"PixelDifferOptions",custom_edit_url:null,hide_title:!0},a={unversionedId:"api/interfaces/mugshot.pixeldifferoptions",id:"api/interfaces/mugshot.pixeldifferoptions",isDocsHomePage:!1,title:"Interface: PixelDifferOptions",description:"mugshot.PixelDifferOptions",source:"@site/docs/api/interfaces/mugshot.pixeldifferoptions.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/mugshot.pixeldifferoptions",permalink:"/mugshot/api/interfaces/mugshot.pixeldifferoptions",editUrl:null,version:"current",sidebar_label:"PixelDifferOptions",frontMatter:{id:"mugshot.pixeldifferoptions",title:"Interface: PixelDifferOptions",sidebar_label:"PixelDifferOptions",custom_edit_url:null,hide_title:!0},sidebar:"api",previous:{title:"Interface: PNGProcessor",permalink:"/mugshot/api/interfaces/mugshot.pngprocessor"},next:{title:"Interface: ScreenshotOptions",permalink:"/mugshot/api/interfaces/mugshot.screenshotoptions"}},p=[{value:"Properties",id:"properties",children:[{value:"diffColor",id:"diffcolor",children:[]},{value:"threshold",id:"threshold",children:[]}]}],l={toc:p};function c({components:e,...t}){return Object(i.b)("wrapper",Object(r.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"/mugshot/api/modules/mugshot"},"mugshot"),".PixelDifferOptions"),Object(i.b)("h2",{id:"properties"},"Properties"),Object(i.b)("h3",{id:"diffcolor"},"diffColor"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.b)("strong",{parentName:"p"},"diffColor"),": ",Object(i.b)("a",{parentName:"p",href:"/mugshot/api/interfaces/mugshot.color"},Object(i.b)("em",{parentName:"a"},"Color"))),Object(i.b)("p",null,"The color used to mark different pixels."),Object(i.b)("p",null,"Defined in: ",Object(i.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/lib/pixel-differ.ts#L15"},"packages/mugshot/src/lib/pixel-differ.ts:15")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"threshold"},"threshold"),Object(i.b)("p",null,"\u2022 ",Object(i.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(i.b)("strong",{parentName:"p"},"threshold"),": ",Object(i.b)("em",{parentName:"p"},"number")),Object(i.b)("p",null,"A number between ",Object(i.b)("inlineCode",{parentName:"p"},"0")," and ",Object(i.b)("inlineCode",{parentName:"p"},"1")," representing the max difference in %\nbetween 2 pixels to be considered identical."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"example")),"\n",Object(i.b)("inlineCode",{parentName:"p"},"0")," means the pixel need to be identical."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"example")),"\n",Object(i.b)("inlineCode",{parentName:"p"},"1")," means two completely different images will be identical. If the\nimages have different dimension then the comparison will fail."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"example")),"\n",Object(i.b)("inlineCode",{parentName:"p"},"0.1")," means black (",Object(i.b)("inlineCode",{parentName:"p"},"#000"),") and 90% gray (",Object(i.b)("inlineCode",{parentName:"p"},"#0a0a0a"),") will be identical."),Object(i.b)("p",null,"Defined in: ",Object(i.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/lib/pixel-differ.ts#L31"},"packages/mugshot/src/lib/pixel-differ.ts:31")))}c.isMDXComponent=!0},128:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),s=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},b=function(e){var t=s(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=s(n),u=r,d=b["".concat(a,".").concat(u)]||b[u]||f[u]||o;return n?i.a.createElement(d,p(p({ref:t},c),{},{components:n})):i.a.createElement(d,p({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,a[1]=p;for(var c=2;c<o;c++)a[c]=n[c];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);