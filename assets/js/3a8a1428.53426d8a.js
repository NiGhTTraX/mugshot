(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{128:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u}));var r=a(0),n=a.n(r);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},b=Object.keys(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),i=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=i(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},h=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,b=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=i(a),h=r,u=m["".concat(c,".").concat(h)]||m[h]||l[h]||b;return a?n.a.createElement(u,s(s({ref:t},p),{},{components:a})):n.a.createElement(u,s({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var b=a.length,c=new Array(b);c[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var p=2;p<b;p++)c[p]=a[p];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"},82:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return p}));var r=a(3),n=(a(0),a(128));const b={id:"mugshot.screenshotstorage",title:"Interface: ScreenshotStorage",sidebar_label:"ScreenshotStorage",custom_edit_url:null,hide_title:!0},c={unversionedId:"api/interfaces/mugshot.screenshotstorage",id:"api/interfaces/mugshot.screenshotstorage",isDocsHomePage:!1,title:"Interface: ScreenshotStorage",description:"mugshot.ScreenshotStorage",source:"@site/docs/api/interfaces/mugshot.screenshotstorage.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/mugshot.screenshotstorage",permalink:"/mugshot/api/interfaces/mugshot.screenshotstorage",editUrl:null,version:"current",sidebar_label:"ScreenshotStorage",frontMatter:{id:"mugshot.screenshotstorage",title:"Interface: ScreenshotStorage",sidebar_label:"ScreenshotStorage",custom_edit_url:null,hide_title:!0},sidebar:"api",previous:{title:"Interface: ScreenshotOptions",permalink:"/mugshot/api/interfaces/mugshot.screenshotoptions"},next:{title:"Interface: Screenshotter",permalink:"/mugshot/api/interfaces/mugshot.screenshotter"}},s=[{value:"Implemented by",id:"implemented-by",children:[]},{value:"Properties",id:"properties",children:[{value:"delete",id:"delete",children:[]},{value:"exists",id:"exists",children:[]},{value:"read",id:"read",children:[]},{value:"write",id:"write",children:[]}]}],o={toc:s};function p({components:e,...t}){return Object(n.b)("wrapper",Object(r.a)({},o,t,{components:e,mdxType:"MDXLayout"}),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"/mugshot/api/modules/mugshot"},"mugshot"),".ScreenshotStorage"),Object(n.b)("p",null,"A way to read and write screenshots."),Object(n.b)("p",null,"It's up to the implementation to decide where and how to\nwrite the screenshots. All the methods receive the name of\nthe screenshot which is the same value as the name passed\nin ",Object(n.b)("a",{parentName:"p",href:"/mugshot/api/classes/mugshot.mugshot-1#check"},"Mugshot.check"),"."),Object(n.b)("h2",{id:"implemented-by"},"Implemented by"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",{parentName:"li",href:"/mugshot/api/classes/mugshot.fsstorage"},Object(n.b)("em",{parentName:"a"},"FsStorage")))),Object(n.b)("h2",{id:"properties"},"Properties"),Object(n.b)("h3",{id:"delete"},"delete"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("strong",{parentName:"p"},"delete"),": (",Object(n.b)("inlineCode",{parentName:"p"},"name"),": ",Object(n.b)("em",{parentName:"p"},"string"),") => ",Object(n.b)("em",{parentName:"p"},"Promise"),"<void",">"),Object(n.b)("p",null,"Delete the screenshot for ",Object(n.b)("inlineCode",{parentName:"p"},"name"),"."),Object(n.b)("p",null,"If the screenshot doesn't exist, this should be a no-op."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"param"))," The value passed to ",Object(n.b)("a",{parentName:"p",href:"/mugshot/api/classes/mugshot.mugshot-1#check"},"Mugshot.check"),"."),Object(n.b)("h4",{id:"type-declaration"},"Type declaration:"),Object(n.b)("p",null,"\u25b8 (",Object(n.b)("inlineCode",{parentName:"p"},"name"),": ",Object(n.b)("em",{parentName:"p"},"string"),"): ",Object(n.b)("em",{parentName:"p"},"Promise"),"<void",">"),Object(n.b)("h4",{id:"parameters"},"Parameters:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:"left"},"Name"),Object(n.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("inlineCode",{parentName:"td"},"name")),Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("em",{parentName:"td"},"string"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Promise"),"<void",">"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/interfaces/screenshot-storage.ts#L39"},"packages/mugshot/src/interfaces/screenshot-storage.ts:39")),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/interfaces/screenshot-storage.ts#L39"},"packages/mugshot/src/interfaces/screenshot-storage.ts:39")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"exists"},"exists"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("strong",{parentName:"p"},"exists"),": (",Object(n.b)("inlineCode",{parentName:"p"},"name"),": ",Object(n.b)("em",{parentName:"p"},"string"),") => ",Object(n.b)("em",{parentName:"p"},"Promise"),"<boolean",">"),Object(n.b)("p",null,"Check whether a screenshot exists for ",Object(n.b)("inlineCode",{parentName:"p"},"name"),"."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"param"))," The value passed to ",Object(n.b)("a",{parentName:"p",href:"/mugshot/api/classes/mugshot.mugshot-1#check"},"Mugshot.check"),"."),Object(n.b)("h4",{id:"type-declaration-1"},"Type declaration:"),Object(n.b)("p",null,"\u25b8 (",Object(n.b)("inlineCode",{parentName:"p"},"name"),": ",Object(n.b)("em",{parentName:"p"},"string"),"): ",Object(n.b)("em",{parentName:"p"},"Promise"),"<boolean",">"),Object(n.b)("h4",{id:"parameters-1"},"Parameters:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:"left"},"Name"),Object(n.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("inlineCode",{parentName:"td"},"name")),Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("em",{parentName:"td"},"string"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Promise"),"<boolean",">"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/interfaces/screenshot-storage.ts#L22"},"packages/mugshot/src/interfaces/screenshot-storage.ts:22")),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/interfaces/screenshot-storage.ts#L22"},"packages/mugshot/src/interfaces/screenshot-storage.ts:22")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"read"},"read"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("strong",{parentName:"p"},"read"),": (",Object(n.b)("inlineCode",{parentName:"p"},"name"),": ",Object(n.b)("em",{parentName:"p"},"string"),") => ",Object(n.b)("em",{parentName:"p"},"Promise"),"<Buffer",">"),Object(n.b)("p",null,"Return the screenshot for ",Object(n.b)("inlineCode",{parentName:"p"},"name")," as a PNG encoded buffer."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"param"))," The value passed to ",Object(n.b)("a",{parentName:"p",href:"/mugshot/api/classes/mugshot.mugshot-1#check"},"Mugshot.check"),"."),Object(n.b)("h4",{id:"type-declaration-2"},"Type declaration:"),Object(n.b)("p",null,"\u25b8 (",Object(n.b)("inlineCode",{parentName:"p"},"name"),": ",Object(n.b)("em",{parentName:"p"},"string"),"): ",Object(n.b)("em",{parentName:"p"},"Promise"),"<Buffer",">"),Object(n.b)("h4",{id:"parameters-2"},"Parameters:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:"left"},"Name"),Object(n.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("inlineCode",{parentName:"td"},"name")),Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("em",{parentName:"td"},"string"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Promise"),"<Buffer",">"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/interfaces/screenshot-storage.ts#L15"},"packages/mugshot/src/interfaces/screenshot-storage.ts:15")),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/interfaces/screenshot-storage.ts#L15"},"packages/mugshot/src/interfaces/screenshot-storage.ts:15")),Object(n.b)("hr",null),Object(n.b)("h3",{id:"write"},"write"),Object(n.b)("p",null,"\u2022 ",Object(n.b)("strong",{parentName:"p"},"write"),": (",Object(n.b)("inlineCode",{parentName:"p"},"name"),": ",Object(n.b)("em",{parentName:"p"},"string"),", ",Object(n.b)("inlineCode",{parentName:"p"},"data"),": ",Object(n.b)("em",{parentName:"p"},"Buffer"),") => ",Object(n.b)("em",{parentName:"p"},"Promise"),"<void",">"),Object(n.b)("p",null,"Write a screenshot for ",Object(n.b)("inlineCode",{parentName:"p"},"name"),"."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"param"))," The value passed to ",Object(n.b)("a",{parentName:"p",href:"/mugshot/api/classes/mugshot.mugshot-1#check"},"Mugshot.check"),"."),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"param"))," PNG encoded Buffer."),Object(n.b)("h4",{id:"type-declaration-3"},"Type declaration:"),Object(n.b)("p",null,"\u25b8 (",Object(n.b)("inlineCode",{parentName:"p"},"name"),": ",Object(n.b)("em",{parentName:"p"},"string"),", ",Object(n.b)("inlineCode",{parentName:"p"},"data"),": ",Object(n.b)("em",{parentName:"p"},"Buffer"),"): ",Object(n.b)("em",{parentName:"p"},"Promise"),"<void",">"),Object(n.b)("h4",{id:"parameters-3"},"Parameters:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:"left"},"Name"),Object(n.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("inlineCode",{parentName:"td"},"name")),Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("em",{parentName:"td"},"string"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("inlineCode",{parentName:"td"},"data")),Object(n.b)("td",{parentName:"tr",align:"left"},Object(n.b)("em",{parentName:"td"},"Buffer"))))),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"Returns:")," ",Object(n.b)("em",{parentName:"p"},"Promise"),"<void",">"),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/interfaces/screenshot-storage.ts#L30"},"packages/mugshot/src/interfaces/screenshot-storage.ts:30")),Object(n.b)("p",null,"Defined in: ",Object(n.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/mugshot/src/interfaces/screenshot-storage.ts#L30"},"packages/mugshot/src/interfaces/screenshot-storage.ts:30")))}p.isMDXComponent=!0}}]);