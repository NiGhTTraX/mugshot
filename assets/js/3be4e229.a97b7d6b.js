(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{128:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,d=u["".concat(o,".").concat(m)]||u[m]||b[m]||c;return n?a.a.createElement(d,i(i({ref:t},l),{},{components:n})):a.a.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return l}));var r=n(3),a=(n(0),n(128));const c={id:"_mugshot_contracts.expectidenticalscreenshots",title:"Function: expectIdenticalScreenshots",sidebar_label:"expectIdenticalScreenshots",custom_edit_url:null,hide_title:!0},o={unversionedId:"api/functions/_mugshot_contracts.expectidenticalscreenshots",id:"api/functions/_mugshot_contracts.expectidenticalscreenshots",isDocsHomePage:!1,title:"Function: expectIdenticalScreenshots",description:"@mugshot/contracts.expectIdenticalScreenshots",source:"@site/docs/api/functions/_mugshot_contracts.expectidenticalscreenshots.md",sourceDirName:"api/functions",slug:"/api/functions/_mugshot_contracts.expectidenticalscreenshots",permalink:"/mugshot/api/functions/_mugshot_contracts.expectidenticalscreenshots",editUrl:null,version:"current",sidebar_label:"expectIdenticalScreenshots",frontMatter:{id:"_mugshot_contracts.expectidenticalscreenshots",title:"Function: expectIdenticalScreenshots",sidebar_label:"expectIdenticalScreenshots",custom_edit_url:null,hide_title:!0},sidebar:"api",previous:{title:"Variable: webdriverViewportContractTests",permalink:"/mugshot/api/variables/_mugshot_contracts.webdriverviewportcontracttests"},next:{title:"Function: loadFixture",permalink:"/mugshot/api/functions/_mugshot_contracts.loadfixture"}},i=[],s={toc:i};function l({components:e,...t}){return Object(a.b)("wrapper",Object(r.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"/mugshot/api/modules/_mugshot_contracts"},"@mugshot/contracts"),".expectIdenticalScreenshots"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"expectIdenticalScreenshots"),"(",Object(a.b)("inlineCode",{parentName:"p"},"screenshot"),": Buffer, ",Object(a.b)("inlineCode",{parentName:"p"},"baselinePath"),": ",Object(a.b)("em",{parentName:"p"},"string"),"): ",Object(a.b)("em",{parentName:"p"},"Promise"),"<void",">"),Object(a.b)("p",null,"Expect that the given screenshot matches the baseline on disk."),Object(a.b)("p",null,"This is sort of a basic re-implementation of Mugshot without all\nof its features. It only depends on its ",Object(a.b)("a",{parentName:"p",href:"/mugshot/api/classes/mugshot.pixeldiffer"},"PixelDiffer")," module."),Object(a.b)("h4",{id:"parameters"},"Parameters:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:"left"},"Name"),Object(a.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:"left"},Object(a.b)("inlineCode",{parentName:"td"},"screenshot")),Object(a.b)("td",{parentName:"tr",align:"left"},"Buffer")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:"left"},Object(a.b)("inlineCode",{parentName:"td"},"baselinePath")),Object(a.b)("td",{parentName:"tr",align:"left"},Object(a.b)("em",{parentName:"td"},"string"))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"Promise"),"<void",">"),Object(a.b)("p",null,"Defined in: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/NiGhTTraX/mugshot/blob/cab11d5/packages/contracts/src/helpers.ts#L11"},"packages/contracts/src/helpers.ts:11")))}l.isMDXComponent=!0}}]);